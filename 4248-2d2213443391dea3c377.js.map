{"version":3,"file":"4248-2d2213443391dea3c377.js","mappings":"iNACA,MAOMA,EAAW,MACf,WAAAC,CAAYC,IACV,IAAAC,GAAiBC,KAAMF,GACvBE,KAAKC,WAAQC,CACf,CACA,MAAAC,GACE,MAAM,MACJF,GACED,KACEI,EAA2BH,EAbpCI,QAAQ,YAAa,IAAIC,cActB,MAAMC,EAAuBH,EAXhCC,QAAQ,eAAgB,OAqBrB,OAAO,IAAAG,GAAE,OAAQ,CACfC,MAAO,qBACNF,EACL,GAEFX,EAASc,MAhCW,gK","sources":["webpack://product-website-template/./node_modules/@utrecht/web-component-library-stencil/dist/esm/utrecht-iban-data.entry.js"],"sourcesContent":["import { r as registerInstance, h } from './index-380964e2.js';\nconst ibanDataCss = \".utrecht-iban-data{font-variant-numeric:lining-nums slashed-zero tabular-nums;white-space:nowrap}:host{display:inline}:host([hidden]){display:none !important}\";\nconst normalizeIBAN = iban => iban\n// Remove whitespace and word separator characters such as the dash\n.replace(/[\\s+\\W]+/g, '').toUpperCase();\nconst formatIBAN = normalizedIBAN => normalizedIBAN\n// Add a space after every four characters, except at the end\n.replace(/(.{4})(?!$)/g, '$1 ');\nconst IBANData = class {\n  constructor(hostRef) {\n    registerInstance(this, hostRef);\n    this.value = undefined;\n  }\n  render() {\n    const {\n      value\n    } = this;\n    const normalized = normalizeIBAN(value);\n    const formatted = formatIBAN(normalized);\n    /*\n     * TODO: Add `value={normalized}` attribute when TypeScript definitions for `<data>` allow it\n     *\n     * Type '{ class: string; value: string; }' is not assignable to type\n     * HTMLAttributes<HTMLDataElement>'.Property 'value' does not exist on type 'HTMLAttributes<HTMLDataElement>'.\n     */\n    /*\n     * TODO: Add `translate=\"no\"` when TypeScript definitions allow it\n     */\n    return h(\"data\", {\n      class: \"utrecht-iban-data\"\n    }, formatted);\n  }\n};\nIBANData.style = ibanDataCss;\nexport { IBANData as utrecht_iban_data };"],"names":["IBANData","constructor","hostRef","r","this","value","undefined","render","normalized","replace","toUpperCase","formatted","h","class","style"],"sourceRoot":""}