{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"classes/","text":"CommonGateway\\CoreBundle Service\\AuthenticationService Service\\CacheService Service\\CallService Service\\ComposerService Service\\EavService Service\\FileService Service\\InstallationService Service\\RequestService","title":"CommonGateway\\CoreBundle"},{"location":"classes/#commongatewaycorebundle","text":"Service\\AuthenticationService Service\\CacheService Service\\CallService Service\\ComposerService Service\\EavService Service\\FileService Service\\InstallationService Service\\RequestService","title":"CommonGateway\\CoreBundle"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/","text":"CommonGateway\\CoreBundle\\Service\\RequestService Handles incomming request from endpoints or controllers that relate to the gateways object structure (eav). Methods Name Description __construct checkEmbedded If embedded should be shown or not. createResponse Creating the responce object. getId Get the ID from given parameters. getSchema Get the schema from given parameters returns false if no schema could be established. itemRequestHandler proxyHandler realRequestQueryAll A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. requestHandler Handles incomming requests and is responsible for generating a responce. searchRequestHandler This function searches all the objectEntities and formats the data. shouldWeUnsetEmbedded If embedded should be shown or not. RequestService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void RequestService::checkEmbedded Description public checkEmbedded (object|array $result) If embedded should be shown or not. Parameters (object|array) $result : fetched result Return Values array|null RequestService::createResponse Description public createResponse ( $data) Creating the responce object. Parameters () $data Return Values \\CommonGateway\\CoreBundle\\Service\\Response RequestService::getId Description public getId (array $object) Get the ID from given parameters. Parameters (array) $object Return Values string|false RequestService::getSchema Description public getSchema (array $parameters) Get the schema from given parameters returns false if no schema could be established. Parameters (array) $parameters Return Values \\Entity|false RequestService::itemRequestHandler Description itemRequestHandler (void) Parameters This function has no parameters. Return Values void RequestService::proxyHandler Description proxyHandler (void) Parameters This function has no parameters. Return Values void RequestService::realRequestQueryAll Description public realRequestQueryAll (string $method) A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. This function will not. Parameters (string) $method : The method of the Request Return Values array An array with all query parameters. RequestService::requestHandler Description public requestHandler (array $data, array $configuration) Handles incomming requests and is responsible for generating a responce. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values \\Response The modified data RequestService::searchRequestHandler Description public searchRequestHandler (array $data, array $configuration) This function searches all the objectEntities and formats the data. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values array The modified data RequestService::shouldWeUnsetEmbedded Description public shouldWeUnsetEmbedded (object|array $result, ?array $accept) If embedded should be shown or not. Parameters (object|array) $result : fetched result (?array) $accept : accept header Return Values array|null","title":"CommonGateway\\CoreBundle\\Service\\RequestService"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#commongatewaycorebundleservicerequestservice","text":"Handles incomming request from endpoints or controllers that relate to the gateways object structure (eav).","title":"CommonGateway\\CoreBundle\\Service\\RequestService"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#methods","text":"Name Description __construct checkEmbedded If embedded should be shown or not. createResponse Creating the responce object. getId Get the ID from given parameters. getSchema Get the schema from given parameters returns false if no schema could be established. itemRequestHandler proxyHandler realRequestQueryAll A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. requestHandler Handles incomming requests and is responsible for generating a responce. searchRequestHandler This function searches all the objectEntities and formats the data. shouldWeUnsetEmbedded If embedded should be shown or not.","title":"Methods"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"RequestService::__construct"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicecheckembedded","text":"Description public checkEmbedded (object|array $result) If embedded should be shown or not. Parameters (object|array) $result : fetched result Return Values array|null","title":"RequestService::checkEmbedded"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicecreateresponse","text":"Description public createResponse ( $data) Creating the responce object. Parameters () $data Return Values \\CommonGateway\\CoreBundle\\Service\\Response","title":"RequestService::createResponse"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicegetid","text":"Description public getId (array $object) Get the ID from given parameters. Parameters (array) $object Return Values string|false","title":"RequestService::getId"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicegetschema","text":"Description public getSchema (array $parameters) Get the schema from given parameters returns false if no schema could be established. Parameters (array) $parameters Return Values \\Entity|false","title":"RequestService::getSchema"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestserviceitemrequesthandler","text":"Description itemRequestHandler (void) Parameters This function has no parameters. Return Values void","title":"RequestService::itemRequestHandler"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestserviceproxyhandler","text":"Description proxyHandler (void) Parameters This function has no parameters. Return Values void","title":"RequestService::proxyHandler"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicerealrequestqueryall","text":"Description public realRequestQueryAll (string $method) A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. This function will not. Parameters (string) $method : The method of the Request Return Values array An array with all query parameters.","title":"RequestService::realRequestQueryAll"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicerequesthandler","text":"Description public requestHandler (array $data, array $configuration) Handles incomming requests and is responsible for generating a responce. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values \\Response The modified data","title":"RequestService::requestHandler"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestservicesearchrequesthandler","text":"Description public searchRequestHandler (array $data, array $configuration) This function searches all the objectEntities and formats the data. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values array The modified data","title":"RequestService::searchRequestHandler"},{"location":"classes/CommonGateway/CoreBundle/Service/RequestService/#requestserviceshouldweunsetembedded","text":"Description public shouldWeUnsetEmbedded (object|array $result, ?array $accept) If embedded should be shown or not. Parameters (object|array) $result : fetched result (?array) $accept : accept header Return Values array|null","title":"RequestService::shouldWeUnsetEmbedded"},{"location":"classes/Service/AuthenticationService/","text":"CommonGateway\\CoreBundle\\Service\\AuthenticationService Methods Name Description __construct checkHS256 Decides if the provided JWT token is signed with the HS256 Algorithm. checkHeadersAndGetJWK Checks the algorithm of the JWT token and decides how to generate a JWK from the provided public key. checkRS512 Decides if the provided JWT token is signed with the RS512 Algorithm. convertRSAtoJWK getAlgorithm getApplicationId getAuthentication getCertificate Writes the certificate and ssl keys to disk, returns the filenames. getHmacToken getJWK getJwtPayload getJwtToken Create a JWT token from Component settings. getTokenFromUrl removeFiles Removes certificates and private keys from disk if they are not necessary anymore. verifyJWTToken Verifies the JWT token and returns the payload if the JWT token is valid. AuthenticationService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void AuthenticationService::checkHS256 Description public checkHS256 (\\JWT $token) Decides if the provided JWT token is signed with the HS256 Algorithm. Parameters (\\JWT) $token : The token provided by the user Return Values bool Whether the token is in HS256 or not AuthenticationService::checkHeadersAndGetJWK Description public checkHeadersAndGetJWK (\\JWT $token, string $publicKey) Checks the algorithm of the JWT token and decides how to generate a JWK from the provided public key. Parameters (\\JWT) $token : The JWT token sent by the user (string) $publicKey : The public key provided by the application Return Values \\JWK The resulting JWK for verifying the JWT AuthenticationService::checkRS512 Description public checkRS512 (\\JWT $token) Decides if the provided JWT token is signed with the RS512 Algorithm. Parameters (\\JWT) $token : The token provided by the user Return Values bool Whether the token is in HS256 or not AuthenticationService::convertRSAtoJWK Description convertRSAtoJWK (void) Parameters This function has no parameters. Return Values void AuthenticationService::getAlgorithm Description getAlgorithm (void) Parameters This function has no parameters. Return Values void AuthenticationService::getApplicationId Description getApplicationId (void) Parameters This function has no parameters. Return Values void AuthenticationService::getAuthentication Description getAuthentication (void) Parameters This function has no parameters. Return Values void AuthenticationService::getCertificate Description public getCertificate (array $config) Writes the certificate and ssl keys to disk, returns the filenames. Parameters (array) $config : The configuration as stored in the source Return Values array The overrides on the configuration with filenames instead of certificate contents AuthenticationService::getHmacToken Description getHmacToken (void) Parameters This function has no parameters. Return Values void AuthenticationService::getJWK Description getJWK (void) Parameters This function has no parameters. Return Values void AuthenticationService::getJwtPayload Description getJwtPayload (void) Parameters This function has no parameters. Return Values void AuthenticationService::getJwtToken Description public getJwtToken (array $component, string $) Create a JWT token from Component settings. Parameters (array) $component : The code of the component (string) $ : The JWT token Return Values void AuthenticationService::getTokenFromUrl Description getTokenFromUrl (void) Parameters This function has no parameters. Return Values void AuthenticationService::removeFiles Description public removeFiles (array $config) Removes certificates and private keys from disk if they are not necessary anymore. Parameters (array) $config : The configuration with filenames Return Values void AuthenticationService::verifyJWTToken Description public verifyJWTToken (string $token, string $publicKey) Verifies the JWT token and returns the payload if the JWT token is valid. Parameters (string) $token : The token to verify (string) $publicKey : The public key to verify the token to Return Values array The payload of the token Throws Exceptions \\HttpException Thrown when the token cannot be verified","title":"AuthenticationService"},{"location":"classes/Service/AuthenticationService/#commongatewaycorebundleserviceauthenticationservice","text":"","title":"CommonGateway\\CoreBundle\\Service\\AuthenticationService"},{"location":"classes/Service/AuthenticationService/#methods","text":"Name Description __construct checkHS256 Decides if the provided JWT token is signed with the HS256 Algorithm. checkHeadersAndGetJWK Checks the algorithm of the JWT token and decides how to generate a JWK from the provided public key. checkRS512 Decides if the provided JWT token is signed with the RS512 Algorithm. convertRSAtoJWK getAlgorithm getApplicationId getAuthentication getCertificate Writes the certificate and ssl keys to disk, returns the filenames. getHmacToken getJWK getJwtPayload getJwtToken Create a JWT token from Component settings. getTokenFromUrl removeFiles Removes certificates and private keys from disk if they are not necessary anymore. verifyJWTToken Verifies the JWT token and returns the payload if the JWT token is valid.","title":"Methods"},{"location":"classes/Service/AuthenticationService/#authenticationservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::__construct"},{"location":"classes/Service/AuthenticationService/#authenticationservicecheckhs256","text":"Description public checkHS256 (\\JWT $token) Decides if the provided JWT token is signed with the HS256 Algorithm. Parameters (\\JWT) $token : The token provided by the user Return Values bool Whether the token is in HS256 or not","title":"AuthenticationService::checkHS256"},{"location":"classes/Service/AuthenticationService/#authenticationservicecheckheadersandgetjwk","text":"Description public checkHeadersAndGetJWK (\\JWT $token, string $publicKey) Checks the algorithm of the JWT token and decides how to generate a JWK from the provided public key. Parameters (\\JWT) $token : The JWT token sent by the user (string) $publicKey : The public key provided by the application Return Values \\JWK The resulting JWK for verifying the JWT","title":"AuthenticationService::checkHeadersAndGetJWK"},{"location":"classes/Service/AuthenticationService/#authenticationservicecheckrs512","text":"Description public checkRS512 (\\JWT $token) Decides if the provided JWT token is signed with the RS512 Algorithm. Parameters (\\JWT) $token : The token provided by the user Return Values bool Whether the token is in HS256 or not","title":"AuthenticationService::checkRS512"},{"location":"classes/Service/AuthenticationService/#authenticationserviceconvertrsatojwk","text":"Description convertRSAtoJWK (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::convertRSAtoJWK"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetalgorithm","text":"Description getAlgorithm (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getAlgorithm"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetapplicationid","text":"Description getApplicationId (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getApplicationId"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetauthentication","text":"Description getAuthentication (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getAuthentication"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetcertificate","text":"Description public getCertificate (array $config) Writes the certificate and ssl keys to disk, returns the filenames. Parameters (array) $config : The configuration as stored in the source Return Values array The overrides on the configuration with filenames instead of certificate contents","title":"AuthenticationService::getCertificate"},{"location":"classes/Service/AuthenticationService/#authenticationservicegethmactoken","text":"Description getHmacToken (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getHmacToken"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetjwk","text":"Description getJWK (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getJWK"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetjwtpayload","text":"Description getJwtPayload (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getJwtPayload"},{"location":"classes/Service/AuthenticationService/#authenticationservicegetjwttoken","text":"Description public getJwtToken (array $component, string $) Create a JWT token from Component settings. Parameters (array) $component : The code of the component (string) $ : The JWT token Return Values void","title":"AuthenticationService::getJwtToken"},{"location":"classes/Service/AuthenticationService/#authenticationservicegettokenfromurl","text":"Description getTokenFromUrl (void) Parameters This function has no parameters. Return Values void","title":"AuthenticationService::getTokenFromUrl"},{"location":"classes/Service/AuthenticationService/#authenticationserviceremovefiles","text":"Description public removeFiles (array $config) Removes certificates and private keys from disk if they are not necessary anymore. Parameters (array) $config : The configuration with filenames Return Values void","title":"AuthenticationService::removeFiles"},{"location":"classes/Service/AuthenticationService/#authenticationserviceverifyjwttoken","text":"Description public verifyJWTToken (string $token, string $publicKey) Verifies the JWT token and returns the payload if the JWT token is valid. Parameters (string) $token : The token to verify (string) $publicKey : The public key to verify the token to Return Values array The payload of the token Throws Exceptions \\HttpException Thrown when the token cannot be verified","title":"AuthenticationService::verifyJWTToken"},{"location":"classes/Service/CacheService/","text":"CommonGateway\\CoreBundle\\Service\\CacheService Service to call external sources. This service provides a guzzle wrapper to work with sources in the common gateway. Methods Name Description __construct cacheEndpoint Put a single endpoint into the cache. cacheObject Put a single object into the cache. cacheShema Put a single schema into the cache. cleanup Remov non-exisitng items from the cashe. getEndpoint Get a single endpoint from the cache. getEndpoints getObject Get a single object from the cache. getSchema Get a single schema from the cache. removeEndpoint Removes an endpoint from the cache. removeObject Removes an object from the cache. removeSchema Removes an Schema from the cache. searchObjects Searches the object store for objects containing the search string. setPagination Decides the pagination values. setStyle Set symfony style in order to output to the console. warmup Throws all available objects into the cache. CacheService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void CacheService::cacheEndpoint Description public cacheEndpoint (\\Endpoint $endpoint) Put a single endpoint into the cache. Parameters (\\Endpoint) $endpoint Return Values \\Endpoint CacheService::cacheObject Description public cacheObject (\\ObjectEntity $objectEntity) Put a single object into the cache. Parameters (\\ObjectEntity) $objectEntity Return Values \\ObjectEntity CacheService::cacheShema Description public cacheShema (\\Entity $entity) Put a single schema into the cache. Parameters (\\Entity) $entity Return Values \\Entity CacheService::cleanup Description public cleanup (void) Remov non-exisitng items from the cashe. Parameters This function has no parameters. Return Values void CacheService::getEndpoint Description public getEndpoint (\\Uuid $id) Get a single endpoint from the cache. Parameters (\\Uuid) $id Return Values array|null CacheService::getEndpoints Description getEndpoints (void) Parameters This function has no parameters. Return Values void CacheService::getObject Description public getObject (string $id) Get a single object from the cache. Parameters (string) $id Return Values array|null CacheService::getSchema Description public getSchema (\\Uuid $id) Get a single schema from the cache. Parameters (\\Uuid) $id Return Values array|null CacheService::removeEndpoint Description public removeEndpoint (\\Endpoint $endpoint) Removes an endpoint from the cache. Parameters (\\Endpoint) $endpoint Return Values void CacheService::removeObject Description public removeObject (\\ObjectEntity $objectEntity) Removes an object from the cache. Parameters (\\ObjectEntity) $objectEntity Return Values void CacheService::removeSchema Description public removeSchema (\\Entity $entity) Removes an Schema from the cache. Parameters (\\Entity) $entity Return Values void CacheService::searchObjects Description public searchObjects (string $search, array $filter, array $entities) Searches the object store for objects containing the search string. Parameters (string) $search : a string to search for within the given context (array) $filter : an array of dot.notation filters for wich to search with (array) $entities : schemas to limit te search to Return Values array|null Throws Exceptions \\Exception CacheService::setPagination Description public setPagination (int $limit, int $start, array $filters) Decides the pagination values. Parameters (int) $limit : The resulting limit (int) $start : The resulting start value (array) $filters : The filters Return Values array CacheService::setStyle Description public setStyle (\\SymfonyStyle $io) Set symfony style in order to output to the console. Parameters (\\SymfonyStyle) $io Return Values self CacheService::warmup Description public warmup (void) Throws all available objects into the cache. Parameters This function has no parameters. Return Values void","title":"CacheService"},{"location":"classes/Service/CacheService/#commongatewaycorebundleservicecacheservice","text":"Service to call external sources. This service provides a guzzle wrapper to work with sources in the common gateway.","title":"CommonGateway\\CoreBundle\\Service\\CacheService"},{"location":"classes/Service/CacheService/#methods","text":"Name Description __construct cacheEndpoint Put a single endpoint into the cache. cacheObject Put a single object into the cache. cacheShema Put a single schema into the cache. cleanup Remov non-exisitng items from the cashe. getEndpoint Get a single endpoint from the cache. getEndpoints getObject Get a single object from the cache. getSchema Get a single schema from the cache. removeEndpoint Removes an endpoint from the cache. removeObject Removes an object from the cache. removeSchema Removes an Schema from the cache. searchObjects Searches the object store for objects containing the search string. setPagination Decides the pagination values. setStyle Set symfony style in order to output to the console. warmup Throws all available objects into the cache.","title":"Methods"},{"location":"classes/Service/CacheService/#cacheservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"CacheService::__construct"},{"location":"classes/Service/CacheService/#cacheservicecacheendpoint","text":"Description public cacheEndpoint (\\Endpoint $endpoint) Put a single endpoint into the cache. Parameters (\\Endpoint) $endpoint Return Values \\Endpoint","title":"CacheService::cacheEndpoint"},{"location":"classes/Service/CacheService/#cacheservicecacheobject","text":"Description public cacheObject (\\ObjectEntity $objectEntity) Put a single object into the cache. Parameters (\\ObjectEntity) $objectEntity Return Values \\ObjectEntity","title":"CacheService::cacheObject"},{"location":"classes/Service/CacheService/#cacheservicecacheshema","text":"Description public cacheShema (\\Entity $entity) Put a single schema into the cache. Parameters (\\Entity) $entity Return Values \\Entity","title":"CacheService::cacheShema"},{"location":"classes/Service/CacheService/#cacheservicecleanup","text":"Description public cleanup (void) Remov non-exisitng items from the cashe. Parameters This function has no parameters. Return Values void","title":"CacheService::cleanup"},{"location":"classes/Service/CacheService/#cacheservicegetendpoint","text":"Description public getEndpoint (\\Uuid $id) Get a single endpoint from the cache. Parameters (\\Uuid) $id Return Values array|null","title":"CacheService::getEndpoint"},{"location":"classes/Service/CacheService/#cacheservicegetendpoints","text":"Description getEndpoints (void) Parameters This function has no parameters. Return Values void","title":"CacheService::getEndpoints"},{"location":"classes/Service/CacheService/#cacheservicegetobject","text":"Description public getObject (string $id) Get a single object from the cache. Parameters (string) $id Return Values array|null","title":"CacheService::getObject"},{"location":"classes/Service/CacheService/#cacheservicegetschema","text":"Description public getSchema (\\Uuid $id) Get a single schema from the cache. Parameters (\\Uuid) $id Return Values array|null","title":"CacheService::getSchema"},{"location":"classes/Service/CacheService/#cacheserviceremoveendpoint","text":"Description public removeEndpoint (\\Endpoint $endpoint) Removes an endpoint from the cache. Parameters (\\Endpoint) $endpoint Return Values void","title":"CacheService::removeEndpoint"},{"location":"classes/Service/CacheService/#cacheserviceremoveobject","text":"Description public removeObject (\\ObjectEntity $objectEntity) Removes an object from the cache. Parameters (\\ObjectEntity) $objectEntity Return Values void","title":"CacheService::removeObject"},{"location":"classes/Service/CacheService/#cacheserviceremoveschema","text":"Description public removeSchema (\\Entity $entity) Removes an Schema from the cache. Parameters (\\Entity) $entity Return Values void","title":"CacheService::removeSchema"},{"location":"classes/Service/CacheService/#cacheservicesearchobjects","text":"Description public searchObjects (string $search, array $filter, array $entities) Searches the object store for objects containing the search string. Parameters (string) $search : a string to search for within the given context (array) $filter : an array of dot.notation filters for wich to search with (array) $entities : schemas to limit te search to Return Values array|null Throws Exceptions \\Exception","title":"CacheService::searchObjects"},{"location":"classes/Service/CacheService/#cacheservicesetpagination","text":"Description public setPagination (int $limit, int $start, array $filters) Decides the pagination values. Parameters (int) $limit : The resulting limit (int) $start : The resulting start value (array) $filters : The filters Return Values array","title":"CacheService::setPagination"},{"location":"classes/Service/CacheService/#cacheservicesetstyle","text":"Description public setStyle (\\SymfonyStyle $io) Set symfony style in order to output to the console. Parameters (\\SymfonyStyle) $io Return Values self","title":"CacheService::setStyle"},{"location":"classes/Service/CacheService/#cacheservicewarmup","text":"Description public warmup (void) Throws all available objects into the cache. Parameters This function has no parameters. Return Values void","title":"CacheService::warmup"},{"location":"classes/Service/CallService/","text":"CommonGateway\\CoreBundle\\Service\\CallService Service to call external sources. This service provides a guzzle wrapper to work with sources in the common gateway. Methods Name Description __construct call Calls a source according to given configuration. decodeResponse Decodes a response based on the source it belongs to. getAllResults Fetches all pages for a source and merges the result arrays to one array. getCertificate Writes the certificate and ssl keys to disk, returns the filenames. removeFiles Removes certificates and private keys from disk if they are not necessary anymore. CallService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void CallService::call Description public call (\\Source $source, string $endpoint, string $method, array $config, bool $asynchronous, bool $createCertificates) Calls a source according to given configuration. Parameters (\\Source) $source : The source to call (string) $endpoint : The endpoint on the source to call (string) $method : The method on which to call the source (array) $config : The additional configuration to call the source (bool) $asynchronous : Whether or not to call the source asynchronously (bool) $createCertificates Return Values \\Response CallService::decodeResponse Description public decodeResponse (\\Source $source, \\Response $response) Decodes a response based on the source it belongs to. Parameters (\\Source) $source : The source that has been called (\\Response) $response : The response to decode Return Values array The decoded response Throws Exceptions \\Exception Thrown if the response does not fit any supported content type CallService::getAllResults Description public getAllResults (\\Source $source, string $endpoint, array $config) Fetches all pages for a source and merges the result arrays to one array. Parameters (\\Source) $source : The source to call (string) $endpoint : The endpoint on the source to call (array) $config : The additional configuration to call the source Return Values array The array of results CallService::getCertificate Description public getCertificate (array $config) Writes the certificate and ssl keys to disk, returns the filenames. Parameters (array) $config : The configuration as stored in the source Return Values array The overrides on the configuration with filenames instead of certificate contents CallService::removeFiles Description public removeFiles (array $config) Removes certificates and private keys from disk if they are not necessary anymore. Parameters (array) $config : The configuration with filenames Return Values void","title":"CallService"},{"location":"classes/Service/CallService/#commongatewaycorebundleservicecallservice","text":"Service to call external sources. This service provides a guzzle wrapper to work with sources in the common gateway.","title":"CommonGateway\\CoreBundle\\Service\\CallService"},{"location":"classes/Service/CallService/#methods","text":"Name Description __construct call Calls a source according to given configuration. decodeResponse Decodes a response based on the source it belongs to. getAllResults Fetches all pages for a source and merges the result arrays to one array. getCertificate Writes the certificate and ssl keys to disk, returns the filenames. removeFiles Removes certificates and private keys from disk if they are not necessary anymore.","title":"Methods"},{"location":"classes/Service/CallService/#callservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"CallService::__construct"},{"location":"classes/Service/CallService/#callservicecall","text":"Description public call (\\Source $source, string $endpoint, string $method, array $config, bool $asynchronous, bool $createCertificates) Calls a source according to given configuration. Parameters (\\Source) $source : The source to call (string) $endpoint : The endpoint on the source to call (string) $method : The method on which to call the source (array) $config : The additional configuration to call the source (bool) $asynchronous : Whether or not to call the source asynchronously (bool) $createCertificates Return Values \\Response","title":"CallService::call"},{"location":"classes/Service/CallService/#callservicedecoderesponse","text":"Description public decodeResponse (\\Source $source, \\Response $response) Decodes a response based on the source it belongs to. Parameters (\\Source) $source : The source that has been called (\\Response) $response : The response to decode Return Values array The decoded response Throws Exceptions \\Exception Thrown if the response does not fit any supported content type","title":"CallService::decodeResponse"},{"location":"classes/Service/CallService/#callservicegetallresults","text":"Description public getAllResults (\\Source $source, string $endpoint, array $config) Fetches all pages for a source and merges the result arrays to one array. Parameters (\\Source) $source : The source to call (string) $endpoint : The endpoint on the source to call (array) $config : The additional configuration to call the source Return Values array The array of results","title":"CallService::getAllResults"},{"location":"classes/Service/CallService/#callservicegetcertificate","text":"Description public getCertificate (array $config) Writes the certificate and ssl keys to disk, returns the filenames. Parameters (array) $config : The configuration as stored in the source Return Values array The overrides on the configuration with filenames instead of certificate contents","title":"CallService::getCertificate"},{"location":"classes/Service/CallService/#callserviceremovefiles","text":"Description public removeFiles (array $config) Removes certificates and private keys from disk if they are not necessary anymore. Parameters (array) $config : The configuration with filenames Return Values void","title":"CallService::removeFiles"},{"location":"classes/Service/ComposerService/","text":"CommonGateway\\CoreBundle\\Service\\ComposerService Methods Name Description audit Search for a given term. getAll Show al packadges installed trough composer. getLockFile Gets all installed plugins from the lock file. getSingle Show a single packadge installed trough composer. remove Show a single packadge installed trough composer. require Show a single packadge installed trough composer. search Search for a given term. upgrade Show a single packadge installed trough composer. ComposerService::audit Description public audit (array $options) Search for a given term. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::getAll Description public getAll (array $options) Show al packadges installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::getLockFile Description public getLockFile (void) Gets all installed plugins from the lock file. Parameters This function has no parameters. Return Values void ComposerService::getSingle Description public getSingle (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::remove Description public remove (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::require Description public require (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::search Description public search (array $options) Search for a given term. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array ComposerService::upgrade Description public upgrade (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService"},{"location":"classes/Service/ComposerService/#commongatewaycorebundleservicecomposerservice","text":"","title":"CommonGateway\\CoreBundle\\Service\\ComposerService"},{"location":"classes/Service/ComposerService/#methods","text":"Name Description audit Search for a given term. getAll Show al packadges installed trough composer. getLockFile Gets all installed plugins from the lock file. getSingle Show a single packadge installed trough composer. remove Show a single packadge installed trough composer. require Show a single packadge installed trough composer. search Search for a given term. upgrade Show a single packadge installed trough composer.","title":"Methods"},{"location":"classes/Service/ComposerService/#composerserviceaudit","text":"Description public audit (array $options) Search for a given term. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::audit"},{"location":"classes/Service/ComposerService/#composerservicegetall","text":"Description public getAll (array $options) Show al packadges installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::getAll"},{"location":"classes/Service/ComposerService/#composerservicegetlockfile","text":"Description public getLockFile (void) Gets all installed plugins from the lock file. Parameters This function has no parameters. Return Values void","title":"ComposerService::getLockFile"},{"location":"classes/Service/ComposerService/#composerservicegetsingle","text":"Description public getSingle (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::getSingle"},{"location":"classes/Service/ComposerService/#composerserviceremove","text":"Description public remove (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::remove"},{"location":"classes/Service/ComposerService/#composerservicerequire","text":"Description public require (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::require"},{"location":"classes/Service/ComposerService/#composerservicesearch","text":"Description public search (array $options) Search for a given term. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::search"},{"location":"classes/Service/ComposerService/#composerserviceupgrade","text":"Description public upgrade (array $options) Show a single packadge installed trough composer. See https://getcomposer.org/doc/03-cli.md#show-info for a full list of al options and there function Parameters (array) $options Return Values array","title":"ComposerService::upgrade"},{"location":"classes/Service/EavService/","text":"CommonGateway\\CoreBundle\\Service\\EavService Methods Name Description __construct checkAttributeforEntity Checks an atribute to see if a schema for its reference has becomme available. checkEntityforAttribute Checks an entity to see if there are anny atributtes waiting for it. EavService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void EavService::checkAttributeforEntity Description public checkAttributeforEntity (\\Attribute $attribute) Checks an atribute to see if a schema for its reference has becomme available. Parameters (\\Attribute) $attribute Return Values \\Attribute EavService::checkEntityforAttribute Description public checkEntityforAttribute (\\Entity $entity) Checks an entity to see if there are anny atributtes waiting for it. Parameters (\\Entity) $entity Return Values \\Entity","title":"EavService"},{"location":"classes/Service/EavService/#commongatewaycorebundleserviceeavservice","text":"","title":"CommonGateway\\CoreBundle\\Service\\EavService"},{"location":"classes/Service/EavService/#methods","text":"Name Description __construct checkAttributeforEntity Checks an atribute to see if a schema for its reference has becomme available. checkEntityforAttribute Checks an entity to see if there are anny atributtes waiting for it.","title":"Methods"},{"location":"classes/Service/EavService/#eavservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"EavService::__construct"},{"location":"classes/Service/EavService/#eavservicecheckattributeforentity","text":"Description public checkAttributeforEntity (\\Attribute $attribute) Checks an atribute to see if a schema for its reference has becomme available. Parameters (\\Attribute) $attribute Return Values \\Attribute","title":"EavService::checkAttributeforEntity"},{"location":"classes/Service/EavService/#eavservicecheckentityforattribute","text":"Description public checkEntityforAttribute (\\Entity $entity) Checks an entity to see if there are anny atributtes waiting for it. Parameters (\\Entity) $entity Return Values \\Entity","title":"EavService::checkEntityforAttribute"},{"location":"classes/Service/FileService/","text":"CommonGateway\\CoreBundle\\Service\\FileService Methods Name Description removeFile writeFile FileService::removeFile Description removeFile (void) Parameters This function has no parameters. Return Values void FileService::writeFile Description writeFile (void) Parameters This function has no parameters. Return Values void","title":"FileService"},{"location":"classes/Service/FileService/#commongatewaycorebundleservicefileservice","text":"","title":"CommonGateway\\CoreBundle\\Service\\FileService"},{"location":"classes/Service/FileService/#methods","text":"Name Description removeFile writeFile","title":"Methods"},{"location":"classes/Service/FileService/#fileserviceremovefile","text":"Description removeFile (void) Parameters This function has no parameters. Return Values void","title":"FileService::removeFile"},{"location":"classes/Service/FileService/#fileservicewritefile","text":"Description writeFile (void) Parameters This function has no parameters. Return Values void","title":"FileService::writeFile"},{"location":"classes/Service/InstallationService/","text":"CommonGateway\\CoreBundle\\Service\\InstallationService Methods Name Description __construct composerupdate Updates all commonground bundles on the common gateway installation. handleAction handleData handleInstaller handleMapping handleSchema install Performs installation actions on a common Gataway bundle. setStyle Set symfony style in order to output to the console. uninstall update validateJsonAction Perform a very basic check to see if a schema file is a valid json-action file. validateJsonMapping Perform a very basic check to see if a schema file is a valid json-mapping file. validateJsonSchema Performce a very basic check to see if a schema file is a valid json-schema file. validateObjects Validates the objects in the EAV setup. validateSchemas Validates the schemas in the EAV setup. validateValues Validates the objects in the EAV setup. InstallationService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void InstallationService::composerupdate Description public composerupdate (array $config) Updates all commonground bundles on the common gateway installation. Parameters (array) $config Return Values int InstallationService::handleAction Description handleAction (void) Parameters This function has no parameters. Return Values void InstallationService::handleData Description handleData (void) Parameters This function has no parameters. Return Values void InstallationService::handleInstaller Description handleInstaller (void) Parameters This function has no parameters. Return Values void InstallationService::handleMapping Description handleMapping (void) Parameters This function has no parameters. Return Values void InstallationService::handleSchema Description handleSchema (void) Parameters This function has no parameters. Return Values void InstallationService::install Description public install (\\SymfonyStyle $io, string $bundle, bool $noSchema) Performs installation actions on a common Gataway bundle. Parameters (\\SymfonyStyle) $io (string) $bundle (bool) $noSchema Return Values int InstallationService::setStyle Description public setStyle (\\SymfonyStyle $io) Set symfony style in order to output to the console. Parameters (\\SymfonyStyle) $io Return Values self InstallationService::uninstall Description uninstall (void) Parameters This function has no parameters. Return Values void InstallationService::update Description update (void) Parameters This function has no parameters. Return Values void InstallationService::validateJsonAction Description public validateJsonAction (array $schema) Perform a very basic check to see if a schema file is a valid json-action file. Parameters (array) $schema Return Values bool InstallationService::validateJsonMapping Description public validateJsonMapping (array $schema) Perform a very basic check to see if a schema file is a valid json-mapping file. Parameters (array) $schema Return Values bool InstallationService::validateJsonSchema Description public validateJsonSchema (array $schema) Performce a very basic check to see if a schema file is a valid json-schema file. Parameters (array) $schema Return Values bool InstallationService::validateObjects Description public validateObjects (void) Validates the objects in the EAV setup. Parameters This function has no parameters. Return Values void InstallationService::validateSchemas Description public validateSchemas (void) Validates the schemas in the EAV setup. Parameters This function has no parameters. Return Values void InstallationService::validateValues Description public validateValues (void) Validates the objects in the EAV setup. Parameters This function has no parameters. Return Values void","title":"InstallationService"},{"location":"classes/Service/InstallationService/#commongatewaycorebundleserviceinstallationservice","text":"","title":"CommonGateway\\CoreBundle\\Service\\InstallationService"},{"location":"classes/Service/InstallationService/#methods","text":"Name Description __construct composerupdate Updates all commonground bundles on the common gateway installation. handleAction handleData handleInstaller handleMapping handleSchema install Performs installation actions on a common Gataway bundle. setStyle Set symfony style in order to output to the console. uninstall update validateJsonAction Perform a very basic check to see if a schema file is a valid json-action file. validateJsonMapping Perform a very basic check to see if a schema file is a valid json-mapping file. validateJsonSchema Performce a very basic check to see if a schema file is a valid json-schema file. validateObjects Validates the objects in the EAV setup. validateSchemas Validates the schemas in the EAV setup. validateValues Validates the objects in the EAV setup.","title":"Methods"},{"location":"classes/Service/InstallationService/#installationservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::__construct"},{"location":"classes/Service/InstallationService/#installationservicecomposerupdate","text":"Description public composerupdate (array $config) Updates all commonground bundles on the common gateway installation. Parameters (array) $config Return Values int","title":"InstallationService::composerupdate"},{"location":"classes/Service/InstallationService/#installationservicehandleaction","text":"Description handleAction (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::handleAction"},{"location":"classes/Service/InstallationService/#installationservicehandledata","text":"Description handleData (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::handleData"},{"location":"classes/Service/InstallationService/#installationservicehandleinstaller","text":"Description handleInstaller (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::handleInstaller"},{"location":"classes/Service/InstallationService/#installationservicehandlemapping","text":"Description handleMapping (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::handleMapping"},{"location":"classes/Service/InstallationService/#installationservicehandleschema","text":"Description handleSchema (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::handleSchema"},{"location":"classes/Service/InstallationService/#installationserviceinstall","text":"Description public install (\\SymfonyStyle $io, string $bundle, bool $noSchema) Performs installation actions on a common Gataway bundle. Parameters (\\SymfonyStyle) $io (string) $bundle (bool) $noSchema Return Values int","title":"InstallationService::install"},{"location":"classes/Service/InstallationService/#installationservicesetstyle","text":"Description public setStyle (\\SymfonyStyle $io) Set symfony style in order to output to the console. Parameters (\\SymfonyStyle) $io Return Values self","title":"InstallationService::setStyle"},{"location":"classes/Service/InstallationService/#installationserviceuninstall","text":"Description uninstall (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::uninstall"},{"location":"classes/Service/InstallationService/#installationserviceupdate","text":"Description update (void) Parameters This function has no parameters. Return Values void","title":"InstallationService::update"},{"location":"classes/Service/InstallationService/#installationservicevalidatejsonaction","text":"Description public validateJsonAction (array $schema) Perform a very basic check to see if a schema file is a valid json-action file. Parameters (array) $schema Return Values bool","title":"InstallationService::validateJsonAction"},{"location":"classes/Service/InstallationService/#installationservicevalidatejsonmapping","text":"Description public validateJsonMapping (array $schema) Perform a very basic check to see if a schema file is a valid json-mapping file. Parameters (array) $schema Return Values bool","title":"InstallationService::validateJsonMapping"},{"location":"classes/Service/InstallationService/#installationservicevalidatejsonschema","text":"Description public validateJsonSchema (array $schema) Performce a very basic check to see if a schema file is a valid json-schema file. Parameters (array) $schema Return Values bool","title":"InstallationService::validateJsonSchema"},{"location":"classes/Service/InstallationService/#installationservicevalidateobjects","text":"Description public validateObjects (void) Validates the objects in the EAV setup. Parameters This function has no parameters. Return Values void","title":"InstallationService::validateObjects"},{"location":"classes/Service/InstallationService/#installationservicevalidateschemas","text":"Description public validateSchemas (void) Validates the schemas in the EAV setup. Parameters This function has no parameters. Return Values void","title":"InstallationService::validateSchemas"},{"location":"classes/Service/InstallationService/#installationservicevalidatevalues","text":"Description public validateValues (void) Validates the objects in the EAV setup. Parameters This function has no parameters. Return Values void","title":"InstallationService::validateValues"},{"location":"classes/Service/RequestService/","text":"CommonGateway\\CoreBundle\\Service\\RequestService Handles incomming request from endpoints or controllers that relate to the gateways object structure (eav). Methods Name Description __construct checkEmbedded If embedded should be shown or not. createResponse Creating the responce object. getId Get the ID from given parameters. getSchema Get the schema from given parameters returns false if no schema could be established. getScopes Get a scopes array for the current user (or of the anonymus if no user s logged in). itemRequestHandler proxyHandler realRequestQueryAll A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. requestHandler Handles incomming requests and is responsible for generating a responce. searchRequestHandler This function searches all the objectEntities and formats the data. shouldWeUnsetEmbedded If embedded should be shown or not. RequestService::__construct Description __construct (void) Parameters This function has no parameters. Return Values void RequestService::checkEmbedded Description public checkEmbedded (object|array $result) If embedded should be shown or not. Parameters (object|array) $result : fetched result Return Values array|null RequestService::createResponse Description public createResponse ( $data) Creating the responce object. Parameters () $data Return Values \\CommonGateway\\CoreBundle\\Service\\Response RequestService::getId Description public getId (array $object) Get the ID from given parameters. Parameters (array) $object Return Values string|false RequestService::getSchema Description public getSchema (array $parameters) Get the schema from given parameters returns false if no schema could be established. Parameters (array) $parameters Return Values \\Entity|false RequestService::getScopes Description public getScopes (void) Get a scopes array for the current user (or of the anonymus if no user s logged in). Parameters This function has no parameters. Return Values array RequestService::itemRequestHandler Description itemRequestHandler (void) Parameters This function has no parameters. Return Values void RequestService::proxyHandler Description proxyHandler (void) Parameters This function has no parameters. Return Values void RequestService::realRequestQueryAll Description public realRequestQueryAll (string $method) A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. This function will not. Parameters (string) $method : The method of the Request Return Values array An array with all query parameters. RequestService::requestHandler Description public requestHandler (array $data, array $configuration) Handles incomming requests and is responsible for generating a responce. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values \\Response The modified data RequestService::searchRequestHandler Description public searchRequestHandler (array $data, array $configuration) This function searches all the objectEntities and formats the data. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values array The modified data RequestService::shouldWeUnsetEmbedded Description public shouldWeUnsetEmbedded (object|array $result, ?array $accept) If embedded should be shown or not. Parameters (object|array) $result : fetched result (?array) $accept : accept header Return Values array|null","title":"RequestService"},{"location":"classes/Service/RequestService/#commongatewaycorebundleservicerequestservice","text":"Handles incomming request from endpoints or controllers that relate to the gateways object structure (eav).","title":"CommonGateway\\CoreBundle\\Service\\RequestService"},{"location":"classes/Service/RequestService/#methods","text":"Name Description __construct checkEmbedded If embedded should be shown or not. createResponse Creating the responce object. getId Get the ID from given parameters. getSchema Get the schema from given parameters returns false if no schema could be established. getScopes Get a scopes array for the current user (or of the anonymus if no user s logged in). itemRequestHandler proxyHandler realRequestQueryAll A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. requestHandler Handles incomming requests and is responsible for generating a responce. searchRequestHandler This function searches all the objectEntities and formats the data. shouldWeUnsetEmbedded If embedded should be shown or not.","title":"Methods"},{"location":"classes/Service/RequestService/#requestservice__construct","text":"Description __construct (void) Parameters This function has no parameters. Return Values void","title":"RequestService::__construct"},{"location":"classes/Service/RequestService/#requestservicecheckembedded","text":"Description public checkEmbedded (object|array $result) If embedded should be shown or not. Parameters (object|array) $result : fetched result Return Values array|null","title":"RequestService::checkEmbedded"},{"location":"classes/Service/RequestService/#requestservicecreateresponse","text":"Description public createResponse ( $data) Creating the responce object. Parameters () $data Return Values \\CommonGateway\\CoreBundle\\Service\\Response","title":"RequestService::createResponse"},{"location":"classes/Service/RequestService/#requestservicegetid","text":"Description public getId (array $object) Get the ID from given parameters. Parameters (array) $object Return Values string|false","title":"RequestService::getId"},{"location":"classes/Service/RequestService/#requestservicegetschema","text":"Description public getSchema (array $parameters) Get the schema from given parameters returns false if no schema could be established. Parameters (array) $parameters Return Values \\Entity|false","title":"RequestService::getSchema"},{"location":"classes/Service/RequestService/#requestservicegetscopes","text":"Description public getScopes (void) Get a scopes array for the current user (or of the anonymus if no user s logged in). Parameters This function has no parameters. Return Values array","title":"RequestService::getScopes"},{"location":"classes/Service/RequestService/#requestserviceitemrequesthandler","text":"Description itemRequestHandler (void) Parameters This function has no parameters. Return Values void","title":"RequestService::itemRequestHandler"},{"location":"classes/Service/RequestService/#requestserviceproxyhandler","text":"Description proxyHandler (void) Parameters This function has no parameters. Return Values void","title":"RequestService::proxyHandler"},{"location":"classes/Service/RequestService/#requestservicerealrequestqueryall","text":"Description public realRequestQueryAll (string $method) A function to replace Request->query->all() because Request->query->all() will replace some characters with an underscore. This function will not. Parameters (string) $method : The method of the Request Return Values array An array with all query parameters.","title":"RequestService::realRequestQueryAll"},{"location":"classes/Service/RequestService/#requestservicerequesthandler","text":"Description public requestHandler (array $data, array $configuration) Handles incomming requests and is responsible for generating a responce. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values \\Response The modified data","title":"RequestService::requestHandler"},{"location":"classes/Service/RequestService/#requestservicesearchrequesthandler","text":"Description public searchRequestHandler (array $data, array $configuration) This function searches all the objectEntities and formats the data. Parameters (array) $data : The data from the call (array) $configuration : The configuration from the call Return Values array The modified data","title":"RequestService::searchRequestHandler"},{"location":"classes/Service/RequestService/#requestserviceshouldweunsetembedded","text":"Description public shouldWeUnsetEmbedded (object|array $result, ?array $accept) If embedded should be shown or not. Parameters (object|array) $result : fetched result (?array) $accept : accept header Return Values array|null","title":"RequestService::shouldWeUnsetEmbedded"}]}